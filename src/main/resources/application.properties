spring.application.name=payments-service
spring.batch.job.enabled=true

# ⚠ 인라인 주석 금지! 꼭 한 줄로만
spring.profiles.active=prod

spring.config.import=optional:file:.env[.properties]
server.port=8081

# ===== Kafka Consumer (공통) =====
spring.kafka.bootstrap-servers=${KAFKA_SERVERS:kafka:9092}
spring.kafka.consumer.group-id=payment-consumer-group
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
spring.kafka.consumer.properties.spring.deserializer.value.delegate.class=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.trusted.packages=*

# ===== Kafka Topics =====
app.kafka.topic.payment-event=payment-events
app.kafka.topic.settlement-command=payment-settlement-commands
app.kafka.topic.payment-confirm-event=payment-confirm-events
app.kafka.topic.payment-status=payment-status-events
app.kafka.topic.payment-cancel=payment-cancel-events
app.kafka.topic.payment-request=payment-request

# ===== Swagger =====
springdoc.api-docs.enabled=true
springdoc.swagger-ui.enabled=true
springdoc.default-produces-media-type=application/json
springdoc.swagger-ui.path=/swagger-ui.html
springdoc.override-with-generic-response=false

# ===== PortOne =====
portone.api.secret-key=${PORTONE_API_SECRET}

# ===== Actuator / Prometheus / Metrics =====
management.endpoints.web.exposure.include=health,info,prometheus
management.endpoint.health.show-details=always
management.endpoint.health.probes.enabled=true
management.metrics.tags.application=${spring.application.name}
management.metrics.distribution.percentiles-histogram.http.server.requests=true
management.metrics.distribution.percentiles-histogram.hikaricp.connections.acquire=true
management.metrics.distribution.sla.hikaricp.connections.acquire=5ms,10ms,20ms,50ms,100ms,200ms,500ms
server.tomcat.mbeanregistry.enabled=true
